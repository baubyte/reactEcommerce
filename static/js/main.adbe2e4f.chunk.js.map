{"version":3,"sources":["Context/Auth/AuthContext.jsx","Context/Cart/CartContext.jsx","Components/Utils/CartWidget.jsx","Layout/Navbar/Navbar.jsx","Layout/Footer/Footer.jsx","Config/format.js","Components/Product/Product.jsx","Config/firebase.js","Components/Utils/Loading.jsx","Pages/Home/HomePage.jsx","Components/Utils/Counter.jsx","Components/Utils/AlertDismissible.jsx","Components/Product/Detail.jsx","Pages/Product/DetailPage.jsx","Components/Form/FormGroup.jsx","Components/Utils/ButtonWithLoading.jsx","Pages/Auth/RegisterPage.jsx","Pages/Auth/LoginPage.jsx","Pages/Auth/LogoutPage.jsx","Components/Cart/Detail.jsx","Pages/Cart/CartPage.jsx","Pages/Cart/CartCheckoutPage.jsx","Pages/Orders/OrdersPage.jsx","Pages/Error/NotFoundPage.jsx","Pages/Error/NotFoundProductPage.jsx","Routes/PublicRoutes.jsx","Pages/Product/Admin/IndexProductsPage.jsx","Pages/Product/Admin/CreateProductPage.jsx","Pages/Product/Admin/EditProductPage.jsx","Pages/Product/Admin/DeleteProductPage.jsx","Routes/AdminRoutes.jsx","Context/Auth/AuthProvider.jsx","Context/Cart/CartProvider.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["AuthContext","React","createContext","CartContext","CartWidget","qtyProducts","useContext","to","Button","variant","size","Badge","bg","Navbar","Consumer","context","className","type","id","activeClassName","userIsLogin","userInfo","admin","NavDropdown","title","nombre","Item","href","Footer","numberFormatCurrency","value","Intl","NumberFormat","style","currency","format","numberFormat","maximumSignificantDigits","Product","producto","alt","height","width","display","src","data","image","price","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","dB","firestore","auth","storage","Loading","props","active","Spinner","animation","children","HomePage","useState","loading","setLoading","productos","setProductos","useEffect","a","collection","get","querySnapshot","docs","console","log","request","map","Counter","idProducto","alert","setAlert","addProductToCart","isInCart","updateQtyProducts","initial","stock","counter","setCounter","isIn","setIsIn","limitStock","setLimitStock","isProductInCart","useCallback","limitQtyStock","productInCart","quantity","Number","InputGroup","onClick","disabled","textAlign","onChange","undefined","readOnly","sku","category","message","show","AlertDismissible","setShow","Alert","onClose","dismissible","Heading","heading","link","linkTo","Link","linkText","Detail","description","DetailPage","useParams","setProducto","productNotFound","setProductNotFound","doc","response","FormGroup","label","register","placeholder","select","options","errors","htmlFor","option","index","text","name","styles","button","fontSize","ButtonWithLoading","handleClick","RegisterPage","useForm","handleSubmit","setError","formState","getValues","reset","initialAlert","onSubmit","createUserWithEmailAndPassword","email","password","responseUser","user","uid","add","apellido","userId","document","code","shouldFocus","required","minLength","pattern","validate","matchesPreviousPassword","LoginPage","signInWithEmailAndPassword","where","authUserInfo","loginUser","LogoutPage","logoutUser","deleteProduct","scope","CartPage","cart","totalCartPay","length","CartCheckoutPage","setCart","orderIds","setOrderIds","cartInLocal","searchProduct","find","validateStock","forEach","cartProduct","currentProductId","updateStocks","batch","documentRef","update","FieldValue","increment","commit","handleOrder","order","cliente","date","Timestamp","fromDate","Date","total","localStorage","removeItem","OrdersPage","ordersInfo","setOrdersInfo","orderRefs","Promise","all","orders","reverse","toDate","toLocaleDateString","NotFoundPage","NotFoundProductPage","PublicRoutes","path","component","from","exact","IndexProductsPage","CreateProductPage","setImage","storageRef","ref","child","put","getDownloadURL","imageUrl","set","event","target","files","validateSize","validateFormats","includes","min","EditProductPage","setValue","setImageUrl","DeleteProductPage","history","useHistory","delete","push","AdminRoutes","AuthProvider","getItem","setUserIsLogin","JSON","parse","setUserInfo","Provider","setItem","stringify","CartProvider","cartOrdersInLocal","setQtyProducts","setTotalCartPay","totalPay","totalProducts","reduce","acc","item","sumPay","prod","addProduct","findProduct","product","indexFindProduct","findIndex","splice","editedProducts","filter","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.adbe2e4f.chunk.js","sourcesContent":["import React from \"react\";\r\n//Creamos el context\r\nexport const AuthContext = React.createContext({});\r\nexport default AuthContext;\r\n","import React from \"react\";\r\n//Creamos el context\r\nexport const CartContext = React.createContext({});\r\nexport default CartContext;\r\n","import React, { useContext } from 'react';\nimport { Button, Badge } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { FaShoppingCart } from 'react-icons/fa';\n\n//Context Cart\nimport {CartContext} from '../../Context/Cart/CartContext';\n\n\n/**\n * Boton de Carrito con la cantidad de productos\n * @returns \n */\nconst CartWidget = () => {\n    //Cantidad de productos en el carrito\n    const { qtyProducts } = useContext(CartContext);\n    return (\n        <>\n            <LinkContainer to=\"/cart\">\n                <Button variant=\"outline-warning\" size=\"md\">\n                    <FaShoppingCart/>\n                    {\n                        qtyProducts > 0 &&\n                        <Badge bg=\"secondary\">\n                            {qtyProducts}\n                        </Badge>\n                    }\n                </Button>\n            </LinkContainer>\n        </>\n    )\n\n}\nexport default CartWidget\n","import { React } from 'react';\nimport { NavDropdown} from 'react-bootstrap';\nimport AuthContext from \"../../Context/Auth/AuthContext\";\n\nimport {\n    NavLink,\n} from \"react-router-dom\"\nimport CartWidget from '../../Components/Utils/CartWidget';\n\nconst Navbar = () => {\n    return (\n        <>\n            <AuthContext.Consumer>\n                {\n                    context =>\n                        <>\n                            <nav className=\"navbar sticky-top navbar-expand-lg navbar-dark bg-dark\">\n                                <NavLink className=\"navbar-brand\" to=\"/\">E-commerce</NavLink>\n                                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo02\" aria-controls=\"navbarTogglerDemo02\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n                                    <span className=\"navbar-toggler-icon\"></span>\n                                </button>\n\n                                <div className=\"collapse navbar-collapse\" id=\"navbarTogglerDemo02\">\n                                    <ul className=\"navbar-nav mr-auto\">\n                                        <li className=\"nav-item\">\n                                            <NavLink className=\"nav-link\" to=\"/\" activeClassName=\"active\">Home</NavLink>\n                                        </li>\n                                        {(context.userIsLogin && context.userInfo?.admin) &&\n                                            <li className=\"nav-item\">\n                                                <NavLink className=\"nav-link\" to=\"/admin/products\" activeClassName=\"active\">Administrar Productos</NavLink>\n                                            </li>\n                                        }\n\n                                    </ul>\n                                    <ul className=\"navbar-nav mr-right\">\n                                        {(!context.userIsLogin) &&\n                                            <>\n                                                <li className=\"nav-item\">\n                                                    <NavLink className=\"nav-link\" to=\"/login\" activeClassName=\"active\">Iniciar Sesión</NavLink>\n                                                </li>\n                                                <li className=\"nav-item\">\n                                                    <NavLink className=\"nav-link\" to=\"/register\" activeClassName=\"active\">Registrarme</NavLink>\n                                                </li>\n                                            </>\n                                        }\n                                        {context.userIsLogin &&\n                                            <NavDropdown title={context.userInfo?.nombre} variant=\"dark\">\n                                                <NavDropdown.Item href=\"/logout\">Cerrar Sesión</NavDropdown.Item>\n                                                <NavDropdown.Item href=\"/orders\">Mis Pedidos</NavDropdown.Item>\n                                            </NavDropdown>\n                                        }\n                                    </ul>\n                                    <CartWidget/>\n                                </div>\n                            </nav>\n                        </>\n                }\n\n            </AuthContext.Consumer>\n        </>\n    );\n}\nexport default Navbar;","import { React } from 'react';\n\nconst Footer = () => {\n    return (\n        <>\n            <footer className=\"container fixed-bottom\">\n            <p className=\"float-right\"><a className=\"text-success\" href=\"#top\">Subir</a></p>\n                <p className=\"text-success\">Pared Baez Martín José</p>\n            </footer>\n        </>\n    );\n}\nexport default Footer;","/**\n * Formatea el numero a formato moneda ARS\n * \n * @param {*} value \n * @returns value\n */\nexport const numberFormatCurrency = (value) =>\n  new Intl.NumberFormat('es-AR', {\n    style: 'currency',\n    currency: 'ARS'\n  }).format(value);\n\n/**\n * Formatea el numero \n * \n * @param {*} value \n * @returns value\n */\n export const numberFormat = (value) =>\n new Intl.NumberFormat('es-AR', {maximumSignificantDigits: 2}).format(value);","import { React} from 'react';\nimport {numberFormatCurrency} from '../../Config/format';\nimport {\n    Link\n} from \"react-router-dom\"\n\n\n/**\n * Componente para mostrar un producto\n * @param {*} param0 \n * @returns \n */\nconst Product = ({ producto }) => {\n    const styleCardImage = {\n            height: \"225px\", \n            width: \"225px\", \n            display: \"block\",\n      };\n    return (\n        \n        <>\n            <div className=\"col-md-4 d-flex align-items-stretch\">\n                <div className=\"card mb-4 shadow-sm\">\n                    <img className=\"card-img-top\" alt=\"Thumbnail [100%x225]\" style={styleCardImage} src={producto.data().image}/>\n                    <div className=\"card-body\">\n                        <h5 className=\"card-title\">{producto.data().title}</h5>\n                        <div className=\"d-flex justify-content-between align-items-center\">\n                            <div className=\"\">\n                                Precio: {numberFormatCurrency(producto.data().price)}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"card-footer d-flex justify-content-between align-items-center\">\n                        <div className=\"col\">\n                            <Link className=\"btn btn-sm btn-outline-info btn-block\"to={`/product/detail/${producto.id}`}>Ver Detalle</Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\nexport default Product;","import firebase from \"firebase/compat/app\"\nimport \"firebase/compat/firestore\"\nimport \"firebase/compat/auth\"\nimport \"firebase/compat/storage\"\n\n//env \n//require(\"dotenv\").config()\n\n//Firebase\n/* const firebaseConfig = {\n    apiKey: `${ process.env.REACT_APP_API_KEY }` ,\n    authDomain: `${ process.env.REACT_APP_AUTH_DOMAIN }` ,\n    projectId: `${ process.env.REACT_APP_PROJECT_ID }` ,\n    storageBucket: `${ process.env.REACT_APP_STORAGE_BUCKET }` ,\n    messagingSenderId: `${ process.env.REACT_APP_MESSAGING_SENDER_ID }` ,\n    appId: `${ process.env.REACT_APP_APP_ID }`,\n    measurementId: `${ process.env.REACT_MEASUREMENT_ID }`\n\n}; */\nconst firebaseConfig = {\n    apiKey: 'AIzaSyDXMP4MZFpY4awTM_yxKGmM93bRlQ-M96c' ,\n    authDomain: 'reactutn-c3f90.firebaseapp.com' ,\n    projectId: 'reactutn-c3f90' ,\n    storageBucket: 'reactutn-c3f90.appspot.com' ,\n    messagingSenderId: '550860714661' ,\n    appId: '1:550860714661:web:0973ee92bf1e36445e134c',\n    measurementId: 'G-VV61Y8H3NB'\n\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.dB = firebase.firestore()\nfirebase.auth = firebase.auth()\nfirebase.storage = firebase.storage()\nexport default firebase","import React from \"react\"\nimport Spinner from 'react-bootstrap/Spinner'\n\n/**\n * Spinners de Carga\n * \n * @param {*} props \n * @returns \n */\nconst Loading = (props) => {\n  const { active } = props\n  //si esta activo el spinner lo mostramos \n  if (active) {\n    return (\n      <div className=\"col-md-8 mx-auto\">\n        <Spinner animation=\"grow\" />\n        <Spinner animation=\"grow\" />\n        <Spinner animation=\"grow\" />\n        <Spinner animation=\"grow\" />\n        <Spinner animation=\"grow\" />\n        <Spinner animation=\"grow\" />\n        <Spinner animation=\"grow\" />\n        <Spinner animation=\"grow\" />\n        <Spinner animation=\"grow\" />\n        <Spinner animation=\"grow\" />\n        <Spinner animation=\"grow\" />\n        <Spinner animation=\"grow\" />\n        <Spinner animation=\"grow\" />\n        <Spinner animation=\"grow\" />\n        <Spinner animation=\"grow\" />\n        <Spinner animation=\"grow\" />\n      </div>\n    )\n    //sino mostramos el contenido\n  } else {\n    return (\n      <>\n        {props.children}\n      </>\n    )\n  }\n\n\n\n\n\n}\nexport default Loading","import { React, useState, useEffect } from 'react';\nimport Product from '../../Components/Product/Product';\nimport firebase from '../../Config/firebase';\nimport Loading from \"../../Components/Utils/Loading\";\n/**\n * Pagina home pagina principal del app\n * lista todos los productos\n * @returns \n */\nconst HomePage = () => {\n    const [loading, setLoading] = useState(true)\n    const [productos, setProductos] = useState([])\n    useEffect(\n        () => {\n            async function request(){\n                try{\n                    const querySnapshot = await firebase.dB.collection(\"productos\")\n                    .get()\n                    if(querySnapshot.docs){\n                        setProductos(querySnapshot.docs)\n                        setLoading(false)\n                    }\n                }catch(e){\n                    console.log(e);\n                }\n            }\n            request()\n        }, [])\n    return (\n        <>\n            <div className=\"album py-5 bg-light\">\n                <div className=\"container\">\n                    <div className=\"card-deck\">\n                    <Loading active={loading}>\n                        {\n    \n                            productos.map(producto => {\n                                return <Product key={producto.id} producto={producto}></Product>;\n                            })\n                        }\n                    </Loading>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\nexport default HomePage;","import {React,useContext,useState ,useEffect, useCallback} from 'react';\nimport { Button, InputGroup } from 'react-bootstrap'\n//Context Cart\nimport {CartContext} from '../../Context/Cart/CartContext';\nimport { FaCartPlus,FaPlusCircle, FaMinusCircle } from 'react-icons/fa';\n\n/**\n * Contador de Productos\n * \n * @param {object} producto \n * @returns \n */\nconst Counter = ({producto, idProducto, alert, setAlert}) => {\n\n    const styleInput ={\n        textAlign:\"center\",\n    }\n\n    //Context\n    const {addProductToCart,isInCart,updateQtyProducts} = useContext(CartContext);\n    //Valor Inicial del Contador si no hay stock lo dejamos en \"No Tenemos Stock\"\n    const initial = (producto.stock === 0) ? \"No Tenemos Stock\" : 1;\n    const [counter, setCounter] = useState(initial);\n    //Hooks que controla si el producto ya esta en el carrito\n    const [isIn,setIsIn] = useState();\n    /**\n     * Hooks con el que controlamos que la suma de los productos que ya estan carrito\n     * y los que se van a agregar no superen el stock del producto\n     */\n    const [limitStock,setLimitStock] = useState();\n    //Cuando Presionamos para disminuir la cantidad de producto\n    const handleDwnQty = () =>{ \n        setCounter(counter -1);\n    }\n    //Cuando Presionamos para aumentar la cantidad de producto\n    const handleUpQty = () => {\n        setCounter(counter + 1);\n    }\n    /**\n     * Comprobamos si el producto esta en el carrito\n     * si lo esta nos devuelve el producto\n     * Callback memorizado que solo cambia cuando sus dependencias cambia\n     */\n    const isProductInCart = useCallback(() => isInCart(idProducto),[isInCart, idProducto]);\n    \n    /**\n     * Comprobamos si el producto que esta en el carrito no supera el stock\n     * para poder setear los hooks\n     * Callback memorizado que solo cambia cuando sus dependencias cambia\n     */\n    const limitQtyStock = useCallback(() => {\n        //Producto en el carrito\n        const productInCart = isProductInCart();\n        /**\n         * si es que esta en el carrito comprobamos las cantidades con el stock\n         * si es igual llegamos al limite y seteamo el limite en true sino false\n         */\n        ((productInCart?.quantity + counter) === Number(producto.stock)) ? setLimitStock(true) : setLimitStock(false);\n    },[counter, isProductInCart,producto.stock]) \n    \n    /**\n     * Al Hacer Click en el boton agregar al \n     * carrito\n     */\n    const handleClickAddToCart =()=>{\n        addProductToCart(\n            {\n                sku: producto.sku,\n                title: producto.title,\n                quantity: counter,\n                price: producto.price,\n                image: producto.image,\n                id: idProducto,\n                category: producto.category\n            }\n        );\n        setCounter(initial);\n        updateQtyProducts();\n        setAlert({\n            ...alert,\n            message:'Agregamos el Producto a Tu Carrito.',\n            show:true\n        })\n    }\n    /**\n     * Solo cuando cambia\n     * isProductInCart, limitQtyStock\n     */\n    useEffect(() => {\n        setIsIn(isProductInCart);\n        limitQtyStock();\n    }, [isProductInCart, limitQtyStock,isIn])\n\n    return (\n        <>\n            <div className=\"row\">\n                <div className=\"col\">\n                <InputGroup size=\"lg\">\n                    <Button onClick = { handleDwnQty } disabled={ counter <= initial } variant=\"danger\" ><FaMinusCircle/> </Button>\n                    <input style={styleInput} onChange = { isProductInCart } className=\"form-control input-lg\" value={\n                            (isIn !== undefined && isIn?.quantity === producto.stock ) ?\n                            \"No Tenemos más Stock\"\n                            :\n                            counter \n                        } readOnly/>\n                    <Button onClick = { handleUpQty } \n                     disabled={ counter >= producto.stock || producto.stock === 0 || (isIn !== undefined && isIn?.quantity === producto.stock ) || limitStock } variant=\"success\">\n                        <FaPlusCircle/>\n                    </Button>\n                </InputGroup>\n                </div>\n                <div className=\"col\">\n                    {/**Deshabilito si se paso el stock*/ }\n                    <Button onClick={handleClickAddToCart} className=\"btn-block\" variant=\"success\" size=\"lg\"\n                        disabled={producto.stock === 0 || (isIn !== undefined && isIn?.quantity === producto.stock )}\n                    >\n                        {\n                            /**\n                             * Si distinto de undefined ya esta en el carrito\n                             * entonces cambiamos el mensaje del boton\n                             */\n                            isIn !== undefined  ? \n                            `Te Agregamos ${counter} más ` \n                            : \n                            ' Te Agregamos al Carrito'\n                        }\n                        <FaCartPlus/>\n                    </Button>\n                </div>\n            </div>\n        </>\n    )\n}\nexport default Counter\n","import { React, useState, useEffect } from \"react\";\nimport { Alert } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap'\n/**\n * \n * @param {*} props \n * @returns \n */\nconst AlertDismissible = ({ alert }) => {\n  const [show, setShow] = useState(false);\n  //cuando surge un cambio en el props\n  useEffect(\n    () => {\n      setShow(alert.show)\n    }, [alert]\n  );\n  return (\n    <>\n      {\n       //comprobamos si show es true caso contrario retornamos null\n        show ?\n          <Alert variant={alert.variant} onClose={() => setShow(false)} dismissible>\n            <Alert.Heading>¡{alert.heading}!</Alert.Heading>\n            <p>\n              {alert.message}\n              {alert.link && <LinkContainer to={alert.linkTo}><Alert.Link>{alert.linkText}</Alert.Link></LinkContainer>}\n            </p>\n          </Alert>\n          :\n          null\n      }\n    </>\n  );\n}\nexport default AlertDismissible;\n","import { React,useState } from 'react';\nimport { numberFormatCurrency, numberFormat } from '../../Config/format';\nimport Counter from '../Utils/Counter';\n//Particular CSS\nimport './Detail.css';\nimport AlertDismissible from \"../../Components/Utils/AlertDismissible\";\n\n/**\n * Componente que muestra el detalle de un producto\n * @returns \n */\nconst Detail = ({ producto }) => {\n    const styleCardImage = {\n        height: \"300px\",\n        width: \"300px\",\n        display: \"block\",\n    };\n    //Datos inicial alert\n    const initialAlert = {\n        show: false,\n        message: '',\n        variant: 'success',\n        heading: 'Exito'\n    }\n    //Hooks Alert\n    const [alert, setAlert] = useState(initialAlert);\n    return (\n        <>\n            <div className=\"col-12 mt-3\">\n            <AlertDismissible alert={alert} />\n                <div className=\"card\">\n                    <div className=\"card-horizontal\">\n                        <div className=\"img-square-wrapper\">\n                            <img src={producto.data().image} alt=\"imagen producto\" style={styleCardImage} />\n                        </div>\n                        <div className=\"card-body\">\n                            <h4 className=\"card-title\">{producto.data().title}</h4>\n                            <p className=\"card-text text-capitalize font-weight-bold\">SKU: {producto.data().sku}</p>\n                            <p className=\"card-text font-weight-bold\">Detalle: {producto.data().description}</p>\n                            <p className=\"card-text text-capitalize font-weight-bold\">Categoria: {producto.data().category}</p>\n                            <p className=\"card-text text-capitalize font-weight-bold\">Precio: {numberFormatCurrency(producto.data().price)}</p>\n                            <p className=\"card-text text-capitalize font-weight-bold\">Stock: {numberFormat(producto.data().stock)}</p>\n                        </div>\n                    </div>\n                    <div className=\"card-footer\">\n                        <Counter setAlert={setAlert} alert={alert} producto={producto.data()} idProducto={producto.id} />\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\nexport default Detail;","import { React, useState, useEffect } from 'react';\nimport Detail from '../../Components/Product/Detail';\nimport firebase from '../../Config/firebase'\nimport Loading from \"../../Components/Utils/Loading\";\nimport {\n    useParams,\n    Redirect,\n} from \"react-router-dom\"\n\n\n/**\n * Pagina Detalle Producto que busca un producto por el id\n * @returns \n */\nconst DetailPage = () => {\n    const { id } = useParams()\n    const [loading, setLoading] = useState(true)\n    const [producto, setProducto] = useState([])\n    const [productNotFound, setProductNotFound] = useState(false)\n\n    useEffect(\n        () => {\n            const request = async () => {\n                try {\n                    const response = await firebase.dB.doc(\"productos/\" + id)\n                        .get()\n                    if (response.data()) {\n                        setProducto(response)\n                        setLoading(false)\n                    } else {\n                        setProductNotFound(true)\n                    }\n\n                } catch (e) {\n                    console.log(e);\n                }\n            }\n            request()\n        }, [id])\n    if (productNotFound) {\n        return (<Redirect to='/notfound/product' />)\n    }\n    return (\n        <>\n            <div className=\"container py-5\">\n                <div className=\"row\">\n                    <Loading active={loading}>\n                        <Detail key={producto.id} producto={producto}></Detail>\n                    </Loading>\n                </div>\n            </div>\n        </>\n    );\n}\nexport default DetailPage;","import React from \"react\"\n\n/**\n * \n * @param {*} props \n * @returns form\n */\nconst FormGroup = (props) => {\n    const { label, type, register, placeholder, select, options } = props\n    const errors = props.errors ||  false\n    return (\n        <>\n            <div className=\"form-group\">\n                {label && <label htmlFor={label}>{label}: <sup>*</sup></label>}\n                {select ?\n                    <select {...register} className=\"form-control\">\n                        {options.map((option,index) => (\n                            <option key={index} value={option.value}>{option.text}</option>\n                        ))}\n                    </select>\n                    :\n                    <input type={type || \"text\"} {...register} className={errors[register.name] ? \"form-control is-invalid\" : \"form-control\"} placeholder={placeholder || \"\"} />\n                }\n\n                {errors[register.name] &&\n                    <span className=\"invalid-feedback\">{errors[register.name].message}</span>\n                }\n            </div>\n        </>\n    )\n}\nexport default FormGroup","import React from \"react\"\n//import Button from 'react-bootstrap/Button'\nimport {Button,Spinner} from 'react-bootstrap'\n\nconst styles={\n    button:{\n        fontSize:\"20px\"\n    }\n    \n}\n/**\n * Boton que se deshabilita segun el estado\n * @param {*} props \n * @returns \n */\nconst ButtonWithLoading = (props) =>{\n    const {variant,type,loading, size,handleClick} = props    \n    return(\n        /* */\n        <Button className=\"btn-block\"\n            type={type || \"submit\"}\n            variant={variant || \"primary\"} \n            size={size || \"\"} \n            disabled={loading} \n            style={styles.button}\n            onClick={(!loading && type !== \"submit\") ? handleClick : null}\n        >\n            {\n                loading &&\n                <Spinner animation=\"border\" size=\"md\" />\n            }\n            \n            {props.children}\n        </Button>\n    )\n    \n}\nexport default ButtonWithLoading;\n","import {React,useState, useContext} from \"react\"\nimport { useForm } from \"react-hook-form\";\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Button } from 'react-bootstrap'\n\nimport FormGroup from \"../../Components/Form/FormGroup\";\nimport AlertDismissible from \"../../Components/Utils/AlertDismissible\";\nimport ButtonWithLoading from \"../../Components/Utils/ButtonWithLoading\";\nimport firebase from '../../Config/firebase'\nimport AuthContext from \"../../Context/Auth/AuthContext\";\nimport {\n    Redirect,\n} from \"react-router-dom\"\n/**\n * Formulario de Registro\n * @returns \n */\nconst  RegisterPage = () => {\n    //Hooks Formulario\n    const { register, handleSubmit, setError, formState: { errors },getValues, reset } = useForm();\n    //Datos inicial del Alert\n    const initialAlert = {\n        show:false,\n        message: '',\n        variant:'success',\n        heading: 'Exito'\n    }\n    //Hooks Alert\n    const [alert, setAlert] = useState(initialAlert);\n    //Hooks pre carga\n    const [loading,setLoading] = useState(false)\n    //Hooks Context Auth\n    const context = useContext(AuthContext)\n    /**\n     * \n     * @param {*} data \n     */\n    const onSubmit = async (data) => {\n        //ocultamos el alert\n        setAlert(initialAlert)\n        setLoading(true)\n        try{\n            const responseUser = await firebase.auth.createUserWithEmailAndPassword(data.email,data.password)\n            //si tenemos id de usuario creamos la coleccion con los datos del usuario\n            if(responseUser.user.uid){\n                const document = await firebase.dB.collection(\"usuarios\")\n                .add({\n                    nombre:data.nombre,\n                    apellido:data.apellido,\n                    userId:responseUser.user.uid\n                })\n                console.log(\"document\",document)\n                reset({})\n                setAlert({\n                    ...alert,\n                    show:true,\n                    message: 'Te Registraste Correctamente.'\n                })\n                setLoading(false)\n            }\n        }catch(e){\n            setLoading(false)\n            switch (e.code) {\n                case \"auth/email-already-in-use\":\n                    setError(\"email\", { message: \"El Email ya se encuentra Registrado.\" }, { shouldFocus: true })\n                    break;\n                case \"auth/weak-password\":\n                    setError(\"password\", { message: \"Por favor use una Contraseña más Segura.\" }, { shouldFocus: true })\n                    break;\n                default:\n                    setAlert({\n                        show:true,\n                        message: 'Surgio un un error al registrarte. Recargue la pagina e intente de nuevo.',\n                        variant:'danger',\n                        heading: 'Ups'\n                    })\n                    break;\n            }\n        }\n    }\n    if (context.userIsLogin) {\n        return <Redirect to=\"/\"/>\n    }\n    return (\n        <div className=\"col-md-6 mx-auto\">\n            <div className=\"card card-body bg-light mt-5\">\n                <AlertDismissible  alert={alert}/>\n                <h3>Crear Cuenta</h3>\n                <p>Ingrese sus Datos</p>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <FormGroup label=\"Nombre\" register={{\n                        ...register(\"nombre\", {\n                            required: \"El Nombre es Obligatorio.\",\n                            minLength: {\n                                value: 3,\n                                message: \"Debe Ingresar al Menos 3 Caracteres.\"\n                            }\n                        })\n                    }} errors={errors} />\n                    <FormGroup label=\"Apellido\" register={{\n                        ...register(\"apellido\", {\n                            required: \"El Apellido es Obligatorio.\",\n                            minLength: {\n                                value: 3,\n                                message: \"Debe Ingresar al Menos 3 Caracteres.\"\n                            }\n                        })\n                    }} errors={errors} />\n                    <FormGroup label=\"Email\" type=\"email\" register={{\n                        ...register(\"email\", {\n                            required: \"El Email es Obligatorio.\",\n                            pattern: {\n                                value: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,})+$/,\n                                message: \"El Email no es Valido.\"\n                            }\n                        })\n                    }} errors={errors} />\n                    <FormGroup label=\"Contraseña\" type=\"password\" register={{\n                        ...register(\"password\", {\n                            required: \"La Contraseña es Obligatoria.\",\n                            minLength: {\n                                value: 8,\n                                message: \"Debe Ingresar al Menos 8 Caracteres.\"\n                            }\n                        })\n                    }} errors={errors} />\n                    <FormGroup label=\"Repetir Contraseña\" type=\"password\" register={{\n                        ...register(\"passwordConfirm\", {\n                            required: \"Debe Repetir la Contraseña.\",\n                            minLength: {\n                                value: 8,\n                                message: \"Debe Ingresar al Menos 8 Caracteres.\"\n                            },\n                            validate: {\n                                matchesPreviousPassword: (value) => {\n                                  const { password } = getValues();\n                                  return password === value || \"Las Contraseña no Coinciden.\";\n                                }\n                            }\n                        })\n                    }} errors={errors} />\n                    <div className=\"row\">\n                    <div className=\"col\">\n                            <ButtonWithLoading loading={loading} type=\"submit\" variant=\"success\" size=\"lg\"> Registrarme</ButtonWithLoading>\n                        </div>\n                        <div className=\"col\">\n                            <LinkContainer to=\"/login\"><Button className=\"btn-block\" variant=\"light\" size=\"lg\"> Iniciar Sesión</Button></LinkContainer>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n\n}\nexport default RegisterPage","import { React, useState, useContext } from \"react\"\nimport { useForm } from \"react-hook-form\";\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Button } from 'react-bootstrap'\nimport FormGroup from \"../../Components/Form/FormGroup\";\nimport AlertDismissible from \"../../Components/Utils/AlertDismissible\";\nimport ButtonWithLoading from \"../../Components/Utils/ButtonWithLoading\";\nimport firebase from '../../Config/firebase';\nimport AuthContext from \"../../Context/Auth/AuthContext\";\nimport {\n    Redirect,\n} from \"react-router-dom\"\n/**\n * Formulario de Login\n * @returns \n */\nconst LoginPage = () => {\n    //Hooks Formulario\n    const { register, handleSubmit, setError, formState: { errors } } = useForm();\n    //Datos inicial del Alert\n    const initialAlert = {\n        show: false,\n        message: '',\n        variant: 'success',\n        heading: 'Exito'\n    }\n    //Hooks Alert\n    const [alert, setAlert] = useState(initialAlert);\n    //Hooks pre carga\n    const [loading,setLoading] = useState(false)\n    //Hooks Context Auth\n    const context = useContext(AuthContext)\n    /**\n     * Envio de Formulario\n     * \n     * @param {*} data \n     */\n    const onSubmit = async (data) => {\n        //ocultamos el alert\n        setAlert(initialAlert)\n        setLoading(true)\n        try {\n            const responseUser = await firebase.auth.signInWithEmailAndPassword(data.email, data.password)\n            //si tenemos id de usuario obtenemos los datos del usuario desde la coleccion\n            if (responseUser.user.uid) {\n                const userInfo = await firebase.dB.collection(\"usuarios\")\n                    //Buscamos en la coleccion donde el id sea igual\n                    .where(\"userId\", \"==\", responseUser.user.uid)\n                    .get()\n                //console.log(\"userInfo\", userInfo.docs[0]?.data())\n                setLoading(false)\n                //console.log(responseUser.user.email);\n                const authUserInfo = \n                {\n                    email:responseUser.user.email,\n                    ...userInfo.docs[0]?.data()\n                }\n                //Seteamos la informacion del usuario\n                context.loginUser(authUserInfo);\n                \n            }\n        } catch (e) {\n            setLoading(false)\n            switch (e.code) {\n                case \"auth/user-not-found\":\n                    setError(\"email\", { message: \"El Email o Contraseña no son Correctos.\" }, { shouldFocus: true })\n                    setError(\"password\", { message: \"\" }, { shouldFocus: true })\n                    break;\n                case \"auth/wrong-password\":\n                    setError(\"email\", { message: \"El Email o Contraseña no son Correctos.\" }, { shouldFocus: true })\n                    setError(\"password\", { message: \"\" }, { shouldFocus: true })\n                    break;\n                default:\n                    setAlert({\n                        show: true,\n                        message: 'Surgio un un error al registrarte. Recargue la pagina e intente de nuevo.',\n                        variant: 'danger',\n                        heading: 'Ups'\n                    })\n                    break;\n            }\n        }\n    }\n    if (context.userIsLogin) {\n        return <Redirect to=\"/\"/>\n    }\n    return (\n        <div className=\"col-md-6 mx-auto\">\n            <div className=\"card card-body bg-light mt-5\">\n                <AlertDismissible alert={alert} />\n                <h3>Iniciar Sesión</h3>\n                <p>Ingrese su Usuario y Contraseña</p>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <FormGroup label=\"Email\" type=\"email\" register={{\n                        ...register(\"email\", {\n                            required: \"El Email es Obligatorio.\",\n                            pattern: {\n                                value: /^\\w+([.-]?\\w+)*@\\w+([.-]?\\w+)*(\\.\\w{2,})+$/,\n                                message: \"El Email no es Valido.\"\n                            }\n                        })\n                    }} errors={errors} />\n                    <FormGroup label=\"Contraseña\" type=\"password\" register={{\n                        ...register(\"password\", {\n                            required: \"La Contraseña es Obligatoria.\",\n                            minLength: {\n                                value: 8,\n                                message: \"Debe Ingresar al Menos 8 Caracteres.\"\n                            }\n                        })\n                    }} errors={errors} />\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <ButtonWithLoading loading={loading} type=\"submit\" variant=\"success\" size=\"lg\"> Iniciar Sesión</ButtonWithLoading>\n                        </div>\n                        <div className=\"col\">\n                            <LinkContainer to=\"/register\"><Button className=\"btn-block\" variant=\"light\" size=\"lg\"> Registrarme</Button></LinkContainer>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n}\nexport default LoginPage","import { React, useEffect, useContext } from \"react\"\nimport AuthContext from \"../../Context/Auth/AuthContext\";\nimport {\n    Redirect,\n\n} from \"react-router-dom\"\n/**\n * Cierra la sesion y redirige al login\n * @returns \n */\nconst LogoutPage = () => {\n    //Hooks Context Auth\n    const context = useContext(AuthContext)\n    useEffect(() => {\n        context.logoutUser();\n    })\n    return (\n        <Redirect to=\"/login\"/>\n    )\n}\nexport default LogoutPage","import { React } from \"react\";\nimport { Button } from 'react-bootstrap'\nimport { FaTrash } from \"react-icons/fa\";\nimport { numberFormatCurrency } from \"../../Config/format\";\n\nconst Detail = ({ idProducto, producto, index, deleteProduct }) => {\n    return (\n        <tr>\n            <th scope=\"row\">{index+1}</th>\n            <td>{producto.title}</td>\n            <td>{producto.quantity}</td>\n            <td>{numberFormatCurrency(producto.price)}</td>\n            <td>{numberFormatCurrency(producto.price * producto.quantity)}</td>\n            <td><Button variant=\"outline-danger\" size=\"sm\" onClick={() => deleteProduct(idProducto)}><FaTrash/></Button></td>\n        </tr>\n    );\n}\nexport default Detail;","import { React, useContext } from \"react\"\nimport Detail from '../../Components/Cart/Detail';\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Button } from 'react-bootstrap'\n//Context Cart\nimport { CartContext } from '../../Context/Cart/CartContext';\n//Context Auth\nimport { AuthContext } from '../../Context/Auth/AuthContext';\nimport { numberFormatCurrency } from \"../../Config/format\";\n/**\n * Listado del Carrito Local\n * @returns \n */\nconst CartPage = () => {\n    //Context Auth\n    const { userIsLogin } = useContext(AuthContext)\n    //Context Cart\n    const { cart, totalCartPay, deleteProduct } = useContext(CartContext);\n    return (\n        <div className=\"row\">\n            <div className=\"col-md-8 col-xs-12 col-sm-12\">\n                <div className=\"card card-body bg-light mt-5\">\n                    <h3>{cart.length === 0 ? 'Tu Carrito está Vacío' : 'Productos en Tu Carrito' }</h3>\n                    <div className=\"col-md-12 table-responsive-sm\">\n                        <table className=\"table table-hover\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\">#</th>\n                                    <th scope=\"col\">Producto</th>\n                                    <th scope=\"col\">Cantidad</th>\n                                    <th scope=\"col\">Precio Uni.</th>\n                                    <th scope=\"col\">Total</th>\n                                    <th scope=\"col\">Quitar</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                                {\n                                    cart.map((producto, index) => {\n                                        return <Detail key={producto.id} index={index} idProducto={producto.id} producto={producto} deleteProduct={deleteProduct} />\n                                    })\n                                }\n\n                            </tbody>\n                        </table>\n                    </div>\n                </div>\n            </div>\n            {\n                cart.length > 0 &&\n                <div className=\"col-md-4 col-xs-8 col-sm-8\">\n                    <div className=\"card card-body bg-light mt-5\">\n                        <h3>Finalizar Pedido</h3>\n                        <p className=\"font-weight-bold\">Total de Tu Pedido: {numberFormatCurrency(totalCartPay)}</p>\n                        {\n                            userIsLogin ?\n                                <LinkContainer to=\"/checkout\">\n                                <Button className=\"btn-block\" variant=\"success\" size=\"lg\">\n                                Finalizar Pedido\n                                </Button>\n                            </LinkContainer>\n                                :\n                                <LinkContainer to=\"/login\">\n                                    <Button className=\"btn-block\" variant=\"warning\" size=\"lg\">\n                                        Debes Iniciar Sesión\n                                    </Button>\n                                </LinkContainer>\n                        }\n                    </div>\n                </div>\n            }\n        </div>\n    )\n}\nexport default CartPage","import { React, useContext, useState, useEffect, useCallback } from \"react\"\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Button } from 'react-bootstrap'\n//Context Cart\nimport { CartContext } from '../../Context/Cart/CartContext';\n//Context Auth\nimport { AuthContext } from '../../Context/Auth/AuthContext';\nimport { numberFormatCurrency, numberFormat } from \"../../Config/format\";\nimport AlertDismissible from \"../../Components/Utils/AlertDismissible\";\n//Firebase\nimport firebase from '../../Config/firebase';\nimport {\n    Redirect,\n} from \"react-router-dom\"\n/**\n * Formulario de CheckoutPage\n * @returns \n */\nconst CartCheckoutPage = () => {\n    //Context Auth\n    const { userIsLogin, userInfo } = useContext(AuthContext)\n    //Context Cart\n    const { cart, setCart, totalCartPay, qtyProducts, orderIds, setOrderIds, cartInLocal, deleteProduct } = useContext(CartContext);\n    //Hook Productos\n    const [productos, setProductos] = useState([])\n    //Datos inicial alert\n    const initialAlert = {\n        show: false,\n        message: '',\n        variant: 'success',\n        heading: 'Exito'\n    }\n    //Hooks Alert\n    const [alert, setAlert] = useState(initialAlert);\n\n    /**\n     * Buscamos el producto\n     * si lo esta nos devuelve el producto\n     * Callback memorizado que solo cambia cuando sus dependencias cambia\n     */\n    const searchProduct = useCallback((idProducto) => {\n        const findProduct = productos.find(producto => producto.id === idProducto);\n        return findProduct;\n    }, [productos]);\n\n    /**\n     * Validamos el stock si es menor al pedido lo sacamos de carrito\n     * \n     * Callback memorizado que solo cambia cuando sus dependencias cambia\n     */\n    const validateStock = useCallback(() => {\n        cart.forEach(cartProduct => {\n            const currentProductId = searchProduct(cartProduct.id)?.id;\n            const currentProductStock = searchProduct(cartProduct.id)?.data().stock;\n            if (currentProductStock < cartProduct.quantity) {\n                deleteProduct(currentProductId)\n                setAlert({\n                    show: true,\n                    message: 'Sacamos algunos Productos de Tu Pedido ya que no Cantabamos con el Stock Suficiente.',\n                    variant: 'danger',\n                    heading: 'Ups'\n                })\n            }\n        })\n    }, [cart, searchProduct, deleteProduct]);\n\n    useEffect(\n        () => {\n            async function request() {\n                try {\n                    const querySnapshot = await firebase.dB.collection(\"productos\")\n                        .get()\n                    if (querySnapshot.docs) {\n                        setProductos(querySnapshot.docs)\n                    }\n                } catch (e) {\n                    console.log(e);\n                }\n            }\n            request()\n        }, [])\n\n    useEffect(\n        () => {\n            validateStock()\n        }, [validateStock]\n    );\n    /**\n     * Actualiza el stock de los producto\n     */\n    const updateStocks = async () => {\n        try {\n\n            const document = await firebase.dB.collection('productos');\n            const batch = firebase.dB.batch()\n\n            //recorremos cart para actualizar el stock\n            try {\n                cart.forEach(async (producto) => {\n                    const documentRef = document.doc(producto.id)\n                    await batch.update(documentRef,'stock',firebase.firestore.FieldValue.increment((- producto.quantity)))\n\n                })\n                await batch.commit()\n                setAlert({\n                    ...alert,\n                    show: true,\n                    message: 'Ya recibimos tu Pedido en Breve nos pondremos en Contacto.',\n                    link:true,\n                    linkTo:'/orders',\n                    linkText:'Ir a Mis Pedidos'\n                })\n            } catch (e) {\n                console.log(e);\n            }\n        } catch (e) {\n            console.log(e);\n        }\n\n\n    }\n    /**\n     * Genera el pedido y lo guarda en \n     * la base de datos\n     * \n     */\n    const handleOrder = async () => {\n        //Datos del pedido\n        const order =\n        {\n            cliente: {\n                nombre: userInfo.nombre,\n                apellido: userInfo.apellido,\n                email: userInfo.email\n            },\n            productos: cart.map(producto => ({\n                id: producto.id,\n                title: producto.title,\n                price: producto.price,\n                quantity: producto.quantity\n            })),\n            date: firebase.firestore.Timestamp.fromDate(new Date()),\n            total: totalCartPay\n        };\n        //Limpiamos el carrito local\n        localStorage.removeItem('cart');\n        //Seteamos el carrito \n        setCart(cartInLocal);\n        try {\n            //Creamos la coleccion\n            const document = await firebase.dB.collection(\"pedidos\").add(order);\n            //guardamos el id en local\n            setOrderIds([...orderIds, { id: document.id }]);\n            updateStocks();\n        } catch (e) {\n            console.log(e);\n        }\n    };\n    //si no esta logueado \n    if (!userIsLogin) {\n        return <Redirect to=\"/\" />\n    }\n    return (\n        <>\n\n            <div className=\"col-md-8 col-xs-8 col-sm-8 mx-auto\">\n                <div className=\"card card-body bg-light mt-5\">\n                    <AlertDismissible alert={alert} />\n                    <h3>Confirmar Pedido</h3>\n                    <p className=\"font-weight-bold\">Pedido a Nombre: {`${userInfo.apellido} ${userInfo.nombre}`}</p>\n                    <p className=\"font-weight-bold\">Email de Contacto: {userInfo.email}</p>\n                    <p className=\"font-weight-bold\">Cantidad de Productos: {numberFormat(qtyProducts)}</p>\n                    <p className=\"font-weight-bold\">Total: {numberFormatCurrency(totalCartPay)}</p>\n                    <div className=\"row\">\n\n                        <div className=\"col\">\n                            <Button disabled={cart.length === 0} onClick={handleOrder} className=\"btn-block\" variant=\"success\" size=\"lg\"> Confirmar</Button>\n                        </div>\n                        <div className=\"col\">\n                            <LinkContainer to=\"/cart\"><Button className=\"btn-block\" variant=\"danger\" size=\"lg\"> Cancelar</Button></LinkContainer>\n                        </div>\n\n                    </div>\n\n                </div>\n            </div>\n        </>\n    )\n}\nexport default CartCheckoutPage","import { React, useState, useEffect, useContext } from \"react\"\nimport { numberFormatCurrency } from '../../Config/format';\nimport { FaTrash } from \"react-icons/fa\";\nimport { Button } from 'react-bootstrap'\nimport firebase from '../../Config/firebase';\n\n//Context Cart\nimport { CartContext } from '../../Context/Cart/CartContext';\n/**\n * Listado de Productos\n * @returns \n */\nconst OrdersPage = () => {\n    const [ordersInfo, setOrdersInfo] = useState([])\n    //Context Cart\n    const { orderIds, setOrderIds } = useContext(CartContext);\n    /**\n     * \n     */\n    useEffect(\n        () => {\n            const request = async () => {\n                try {\n                    //Obtenemos todas las ordenes con los id locales\n                    const orderRefs = orderIds.map(async ({ id }) => {\n                        return await firebase.dB.collection('pedidos').doc(id).get();\n                    });\n                    //Guardamos todos los documentos\n                    const docs = await Promise.all(orderRefs)\n                    //recorremos los pedidos\n                    const orders = docs.map(doc => ({ id: doc.id, ...doc.data() }));\n                    //Reverse asi el ultimo pedidos es el primero\n                    setOrdersInfo(orders.reverse())\n                    console.log(orders);\n                } catch (error) {\n                    console.log(error);\n                }\n            }\n            request()\n        }, [orderIds])\n\n    return (\n        <>\n            <div className=\"row\">\n                <div className=\"col-md-4 col-xs-4 col-sm-4 mx-auto\">\n                    <div className=\"card card-body bg-light mt-5 text-center\">\n                        <h3 className=\"card-title\">Mis Pedidos</h3>\n                        <Button disabled={orderIds.length === 0} onClick={()=> {\n                            localStorage.removeItem('cartOrders');\n                            setOrderIds([])\n                        }} className=\"btn-block\" variant=\"success\" size=\"lg\"> Limpiar Pedidos <FaTrash /></Button>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md-12 col-xs-12 col-sm-12\">\n                    <div className=\"card card-body bg-light mt-5\">\n                        <div className=\"col-md-12 table-responsive-sm\">\n                            <table className=\"table table-hover text-center\">\n                                <thead className=\"thead-dark\">\n                                    <tr>\n                                        <th scope=\"col\" className=\"col-1\">#</th>\n                                        <th scope=\"col\" className=\"col-2\">Cod. Referencia</th>\n                                        <th scope=\"col\" className=\"col-2\">Fecha</th>\n                                        <th scope=\"col\">Productos</th>\n                                        <th scope=\"col\" className=\"col-2\">Total</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {ordersInfo &&\n                                        ordersInfo.map(({ id, total, date, productos },index) => (\n                                            <tr key={id}>\n                                                <td>{(index + 1)}</td>\n                                                <td>{id}</td>\n                                                <td>{date.toDate().toLocaleDateString('es-AR')}</td>\n                                                <td>\n                                                    <ul>\n                                                    {\n                                                        productos &&\n                                                        productos.map(producto => <li key={producto.id}> {producto.title} x {producto.quantity} </li> )\n                                                    }\n                                                    </ul>\n                                                </td>\n                                                <td>{numberFormatCurrency(total)}</td>\n                                            </tr>\n                                        ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\nexport default OrdersPage;","import { React } from 'react';\nimport {\n    Link\n} from \"react-router-dom\"\n\n/**\n * Pagina not found muestra 404 cuando no se encuentra la ruta\n * @returns \n */\nconst NotFoundPage = () => {\n    return (\n        <>\n            <div className=\"page-wrap d-flex flex-row align-items-center\">\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-12 text-center\">\n                            <span className=\"display-1 d-block\">404</span>\n                            <div className=\"mb-4 lead\">La página que estas buscando no se encontró.</div>\n                            <Link className=\"btn btn-link\" to=\"/\">Volver al Inicio</Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\nexport default NotFoundPage;","import { React } from 'react';\nimport {\n    Link\n} from \"react-router-dom\"\n\n/**\n * Pagina not found muestra 404 cuando no se encuentra la ruta\n * @returns \n */\nconst NotFoundProductPage = () => {\n    return (\n        <>\n            <div className=\"page-wrap d-flex flex-row align-items-center\">\n                <div className=\"container\">\n                    <div className=\"row justify-content-center\">\n                        <div className=\"col-md-12 text-center\">\n                            <span className=\"display-1 d-block\">404</span>\n                            <div className=\"mb-4 lead\">No pudimos encontrar el Producto que buscabas.</div>\n                            <Link className=\"btn btn-link\" to=\"/\">Volver a Productos</Link>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    );\n}\nexport default NotFoundProductPage;","import HomePage from '../Pages/Home/HomePage';\nimport DetailPage from '../Pages/Product/DetailPage';\nimport RegisterPage from '../Pages/Auth/RegisterPage';\nimport LoginPage from '../Pages/Auth/LoginPage';\nimport LogoutPage from '../Pages/Auth/LogoutPage';\nimport CartPage from '../Pages/Cart/CartPage';\nimport CartCheckoutPage from '../Pages/Cart/CartCheckoutPage';\nimport OrdersPage from '../Pages/Orders/OrdersPage';\nimport NotFoundPage from '../Pages/Error/NotFoundPage';\nimport NotFoundProductPage from '../Pages/Error/NotFoundProductPage';\nimport {\n  Switch,\n  Route,\n  Redirect,\n} from \"react-router-dom\"\n\n/**\n * Rutas que son de acceso publico\n * \n * @returns rutas publicas\n */\nconst PublicRoutes = () => {\n  return (\n      <Switch>\n        <Route path=\"/register\" component={RegisterPage}/>\n        <Route path=\"/login\" component={LoginPage}/>\n        <Route path=\"/logout\" component={LogoutPage}/>\n        <Route path=\"/product/detail/:id\"  component={DetailPage}/>\n        <Route path=\"/cart\" component={CartPage}/>\n        <Route path=\"/checkout\" component={CartCheckoutPage}/>\n        <Route path=\"/orders\" component={OrdersPage}/>\n        <Route path=\"/notfound/product\" component={NotFoundProductPage}/>\n        <Redirect from=\"/home\" to=\"/\"/>\n        <Route exact path=\"/\" component={HomePage}/>\n        <Route path=\"*\" component={NotFoundPage}/>\n      </Switch>\n  );\n}\n\nexport default PublicRoutes;\n","import { React, useState, useEffect } from \"react\"\nimport {numberFormatCurrency, numberFormat} from '../../../Config/format';\nimport { FaTrash, FaEdit,FaPlusCircle } from \"react-icons/fa\";\nimport firebase from '../../../Config/firebase';\n\n\nimport {\n    Link,\n} from \"react-router-dom\"\n/**\n * Listado de Productos\n * @returns \n */\nconst IndexProductsPage = () => {\n    const [productos, setProductos] = useState([])\n    /**\n     * \n     */\n    useEffect(\n        () => {\n            const request = async () => {\n                try {\n                    const querySnapshot = await firebase.dB.collection(\"productos\")\n                        .get()\n                    if (querySnapshot.docs) {\n                        setProductos(querySnapshot.docs)\n                    }\n                } catch (error) {\n                    console.log(error);\n                }\n            }\n            request()\n        }, [])\n\n    return (\n        <>\n            <div className=\"row\">\n                <div className=\"col-md-4 col-xs-4 col-sm-4 mx-auto\">\n                    <div className=\"card card-body bg-light mt-5 text-center\">\n                        <h3 className=\"card-title\">Productos</h3>\n                        <Link to=\"product/create\" className=\"btn btn-success\">Agregar Producto <FaPlusCircle/></Link>\n                    </div>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-md-12 col-xs-12 col-sm-12\">\n                    <div className=\"card card-body bg-light mt-5\">\n                        <div className=\"col-md-12 table-responsive-sm\">\n                            <table className=\"table table-hover\">\n                                <thead  className=\"thead-dark\">\n                                    <tr>\n                                        <th scope=\"col\">#</th>\n                                        <th scope=\"col\">Producto</th>\n                                        <th scope=\"col\">SKU</th>\n                                        <th scope=\"col\">Stock</th>\n                                        <th scope=\"col\">Precio</th>\n                                        <th scope=\"col\">Acciones</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {productos &&\n                                        productos.map((producto, index) => (\n                                            <tr key={producto.id}>\n                                                <td>{(index + 1)}</td>\n                                                <td>{producto.data().title}</td>\n                                                <td>{producto.data().sku}</td>\n                                                <td>{numberFormat(producto.data().stock)}</td>\n                                                <td>{numberFormatCurrency(producto.data().price)}</td>\n                                                <td>\n                                                <div className=\"form-group text-center\">\n                                                    <Link to={`/admin/product/edit/${producto.id}`} className=\"btn btn-success btn-sm mr-1\"><FaEdit/></Link>\n                                                    <Link to={`/admin/product/delete/${producto.id}`}  className=\"btn btn-danger btn-sm\"><FaTrash/></Link>\n                                                </div>\n                                                </td>\n                                            </tr>\n                                        ))}\n                                </tbody>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\nexport default IndexProductsPage;","import { React, useState } from \"react\"\nimport { useForm } from \"react-hook-form\";\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Button } from 'react-bootstrap'\n\nimport FormGroup from \"../../../Components/Form/FormGroup\";\nimport AlertDismissible from \"../../../Components/Utils/AlertDismissible\";\nimport ButtonWithLoading from \"../../../Components/Utils/ButtonWithLoading\";\nimport firebase from '../../../Config/firebase'\n/**\n * Formulario de Alta Producto\n * @returns \n */\nconst CreateProductPage = () => {\n    //Hooks Formulario\n    const { register, handleSubmit, formState: { errors }, reset } = useForm();\n    //Datos inicial alert\n    const initialAlert = {\n        show: false,\n        message: '',\n        variant: 'success',\n        heading: 'Exito'\n    }\n    //Hooks Alert\n    const [alert, setAlert] = useState(initialAlert);\n    //Hooks Image\n    const [image, setImage] = useState([])\n    //Hooks pre carga\n    const [loading, setLoading] = useState(false)\n    /**\n     * Envio de formulario\n     * @param {*} data \n     */\n    const onSubmit = async (data) => {\n        //ocultamos el alert\n        setAlert(initialAlert)\n        setLoading(true)\n        try {\n            const document = await firebase.dB.collection(\"productos\")\n                .add({\n                    title: data.title,\n                    category: data.category,\n                    description: data.description,\n                    price: Number(data.price),\n                    stock: Number(data.stock),\n                    sku:data.sku\n                })\n            if (image.type !== undefined) {\n                const storageRef = firebase.storage.ref('products/images').child(document.id); // nombre del archivo\n                await storageRef.put(image);\n                let imageUrl = await storageRef.getDownloadURL()\n                const producto = await firebase.dB.doc(\"productos/\" + document.id).get();\n                await firebase.dB.doc(\"productos/\" + document.id)\n                    .set({\n                        ...producto.data(),\n                        image: imageUrl\n                    })\n            }\n\n            reset({})\n            setAlert({\n                ...alert,\n                show: true,\n                message: 'El Producto se Guardo Correctamente.'\n            })\n            setLoading(false)\n        } catch (e) {\n            setLoading(false)\n            console.log(e);\n        }\n    }\n    return (\n        <div className=\"col-md-6 mx-auto\">\n            <div className=\"card card-body bg-light mt-5\">\n                <AlertDismissible alert={alert} />\n                <h3>Crear Producto</h3>\n                <p>Complete los Datos</p>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <FormGroup label=\"Imagen\" type=\"file\" register={{\n                        ...register(\"image\", {\n                            onChange: (event) => setImage(event.target.files[0]),\n                            validate: {\n                                validateSize: files => files[0]?.size < 10000000 || 'Tamaño Maximo 10MB',\n                                validateFormats: files =>\n                                    ['image/jpeg', 'image/png'].includes(\n                                        files[0]?.type\n                                    ) || 'Solo se Permiten los Formatos PNG y JPEG',\n                            },\n                        })\n                    }} errors={errors} />\n                    <FormGroup label=\"SKU\" type=\"number\" register={{\n                        ...register(\"sku\", {\n                            required: \"El SKU es ObligatoriO.\",\n                            min: {\n                                value: 1,\n                                message: \"Debe Ingresar un Valor Mayor a 0.\"\n                            }\n                        })\n                    }} errors={errors} />\n                    <FormGroup label=\"Titulo\" register={{\n                        ...register(\"title\", {\n                            required: \"El Titulo es Obligatorio.\",\n                            minLength: {\n                                value: 3,\n                                message: \"Debe Ingresar al Menos 3 Caracteres.\"\n                            }\n                        })\n                    }} errors={errors} />\n                    <FormGroup select={true} label=\"Categoria\" register={{\n                        ...register(\"category\", {\n                            required: \"El Apellido es Obligatorio.\",\n                        })\n                    }} options={[{ value: \"computacion\", text: \"Computación\" },\n                    { value: \"gaming\", text: \"Gaming\" },\n                    ]} />\n                    <FormGroup label=\"Descripción\" register={{\n                        ...register(\"description\", {\n                            required: \"La Descripcion es Obligatoria.\",\n                            minLength: {\n                                value: 3,\n                                message: \"Debe Ingresar al Menos 3 Caracteres.\"\n                            }\n                        })\n                    }} errors={errors} />\n                    <FormGroup label=\"Precio\" type=\"number\" register={{\n                        ...register(\"price\", {\n                            required: \"El Precio es Obligatorio.\",\n                            min: {\n                                value: 1,\n                                message: \"Debe Ingresar un Valor Mayor a 0.\"\n                            }\n                        })\n                    }} errors={errors} />\n                    <FormGroup label=\"Stock\" type=\"number\" register={{\n                        ...register(\"stock\", {\n                            required: \"El Stock es Obligatorio.\",\n                            min: {\n                                value: 1,\n                                message: \"Debe Ingresar un Valor Mayor a 0.\"\n                            }\n                        })\n                    }} errors={errors} />\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <ButtonWithLoading loading={loading} type=\"submit\" variant=\"success\" size=\"lg\"> Guardar</ButtonWithLoading>\n                        </div>\n                        <div className=\"col\">\n                            <LinkContainer to=\"/admin/products\"><Button className=\"btn-block\" variant=\"danger\" size=\"lg\"> Cancelar</Button></LinkContainer>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n\n}\nexport default CreateProductPage","import { React, useState, useEffect } from \"react\"\nimport {LinkContainer} from 'react-router-bootstrap'\nimport {Button} from 'react-bootstrap'\nimport { useForm } from \"react-hook-form\";\nimport {\n    useParams\n} from \"react-router-dom\"\nimport FormGroup from \"../../../Components/Form/FormGroup\";\nimport AlertDismissible from \"../../../Components/Utils/AlertDismissible\";\nimport ButtonWithLoading from \"../../../Components/Utils/ButtonWithLoading\";\nimport firebase from '../../../Config/firebase'\n/**\n * Formulario de Alta Producto\n * @returns \n */\nconst EditProductPage = () => {\n    //Hooks Formulario\n    const { register, handleSubmit, formState: { errors },setValue } = useForm();\n    //Datos inicial alert\n    const initialAlert = {\n        show: false,\n        message: '',\n        variant: 'success',\n        heading: 'Exito'\n    }\n    //Hooks Alert\n    const [alert, setAlert] = useState(initialAlert);\n    //Hooks Image\n    const [image, setImage] = useState({})\n    //Hooks urlImagen\n    const [imageUrl, setImageUrl] = useState()\n    //Hooks pre carga\n    const [loading,setLoading] = useState(false)\n    //Hooks router recibe los parametros\n    const {id}=useParams()\n    /**\n     * Envio de formulario\n     * @param {*} data \n     */\n    const onSubmit = async (data) => {\n        //ocultamos el alert\n        setAlert(initialAlert)\n        setLoading(true)\n        try {\n            //si type esta definido subimos la imagen\n            if (image.type !== undefined) {\n                const storageRef = firebase.storage.ref('products/images').child(id); // nombre del archivo\n                await storageRef.put(image);\n                setImageUrl(await storageRef.getDownloadURL())\n            }\n            await firebase.dB.doc(\"productos/\"+id)\n            .set({\n                title: data.title,\n                category: data.category,\n                description: data.description,\n                price: Number(data.price),\n                image: imageUrl,\n                stock:Number(data.stock),\n                sku:data.sku\n            })\n            setAlert({\n                ...alert,\n                show: true,\n                message: 'El Producto se Edito Correctamente.'\n            })\n            setLoading(false)\n        } catch (e) {\n            setLoading(false)\n            console.log(e);\n        }\n    }\n    /**\n     * Obtenemos los datos del producto\n     */\n    useEffect(\n        ()=>{\n             const request = async () =>{\n                try{\n                    const response = await firebase.dB.doc(\"productos/\"+id)\n                    .get()\n                    if(response.data()){\n                        setValue(\"title\",response.data().title)\n                        setValue(\"price\",response.data().price)\n                        setValue(\"category\",response.data().category)\n                        setValue(\"description\",response.data().description)\n                        setValue(\"sku\",response.data().sku)\n                        setValue(\"stock\",response.data().stock)\n                        setImageUrl(response.data().image)\n                    }\n                }catch(e){\n                    console.log(e);\n                }\n                \n            }\n            request()\n            \n        },[id,setValue]\n    )\n    return (\n        <div className=\"col-md-6 mx-auto\">\n            <div className=\"card card-body bg-light mt-5\">\n                <AlertDismissible alert={alert} />\n                <h3>Editar Producto</h3>\n                <p>Complete los Datos</p>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <FormGroup label=\"Imagen\" type=\"file\" register={{\n                        ...register(\"image\", {\n                            onChange: (event) => setImage(event.target.files[0]),\n                            validate: {\n                                validateSize: (files) => {\n                                    if(!files[0]) {return true}\n                                    else{\n\n                                        return files[0]?.size < 10000000 || 'Tamaño Maximo 10MB'\n                                    }\n                                },\n                                validateFormats: (files) =>{\n                                    if(!files[0]) {return true}\n                                    else{\n                                    return ['image/jpeg', 'image/png'].includes(files[0]?.type) || 'Solo se Permiten los Formatos PNG y JPEG'\n                                    }\n                                },\n                            },\n                        })\n                    }} errors={errors} />\n                    <FormGroup label=\"SKU\" type=\"number\" register={{\n                        ...register(\"sku\", {\n                            required: \"El SKU es ObligatoriO.\",\n                            min: {\n                                value: 1,\n                                message: \"Debe Ingresar un Valor Mayor a 0.\"\n                            }\n                        })\n                    }} errors={errors} />\n                    <FormGroup label=\"Titulo\" register={{\n                        ...register(\"title\", {\n                            required: \"El Titulo es Obligatorio.\",\n                            minLength: {\n                                value: 3,\n                                message: \"Debe Ingresar al Menos 3 Caracteres.\"\n                            }\n                        })\n                    }} errors={errors} />\n                    <FormGroup select={true} label=\"Categoria\" register={{\n                        ...register(\"category\", {\n                            required: \"El Apellido es Obligatorio.\",\n                        })\n                    }} options={[{ value: \"computacion\", text: \"Computación\" },\n                    { value: \"gaming\", text: \"Gaming\" },\n                    ]} />\n                    <FormGroup label=\"Descripción\" register={{\n                        ...register(\"description\", {\n                            required: \"La Descripcion es Obligatoria.\",\n                            minLength: {\n                                value: 3,\n                                message: \"Debe Ingresar al Menos 3 Caracteres.\"\n                            }\n                        })\n                    }} errors={errors} />\n                    <FormGroup label=\"Precio\" type=\"number\" register={{\n                        ...register(\"price\", {\n                            required: \"El Precio es Obligatoria.\",\n                            min: {\n                                value: 1,\n                                message: \"Debe Ingresar un Valor Mayor a 0.\"\n                            }\n                        })\n                    }} errors={errors} />\n                    <FormGroup label=\"Stock\" type=\"number\" register={{\n                        ...register(\"stock\", {\n                            required: \"El Stock es Obligatorio.\",\n                            min: {\n                                value: 1,\n                                message: \"Debe Ingresar un Valor Mayor a 0.\"\n                            }\n                        })\n                    }} errors={errors} />\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <ButtonWithLoading loading={loading} type=\"submit\" variant=\"success\" size=\"lg\"> Guardar</ButtonWithLoading>\n                        </div>\n                        <div className=\"col\">\n                        <LinkContainer to=\"/admin/products\"><Button className=\"btn-block\" variant=\"danger\" size=\"lg\"> Cancelar</Button></LinkContainer>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n\n}\nexport default EditProductPage","import { React, useState, useEffect } from \"react\"\nimport { useForm } from \"react-hook-form\";\nimport { LinkContainer } from 'react-router-bootstrap'\nimport { Button } from 'react-bootstrap'\nimport {\n    useParams,\n    useHistory,\n} from \"react-router-dom\"\nimport FormGroup from \"../../../Components/Form/FormGroup\";\nimport firebase from '../../../Config/firebase'\nimport ButtonWithLoading from \"../../../Components/Utils/ButtonWithLoading\";\n/**\n * Formulario de Alta Producto\n * @returns \n */\nconst DeleteProductPage = () => {\n    const { register, handleSubmit,setValue } = useForm();\n    const [loading, setLoading] = useState(false)\n    const {id}=useParams()\n    let history = useHistory();\n    /**\n     * \n     * @param {*} data \n     */\n    const onSubmit = async (data) => {\n        setLoading(true)\n        try {\n            await firebase.dB.doc(\"productos/\"+id).delete()\n            history.push(\"/admin/products\");\n            setLoading(false)\n        } catch (e) {\n            setLoading(false)\n            console.log(e);\n        }\n    }\n    /**\n     * \n     */\n    useEffect(\n        ()=>{\n             const request = async () =>{\n                try{\n                    const response = await firebase.dB.doc(\"productos/\"+id)\n                    .get()\n                    if(response.data()){\n                        setValue(\"title\",response.data().title)\n                        setValue(\"price\",response.data().price)\n                        setValue(\"category\",response.data().category)\n                        setValue(\"sku\",response.data().sku)\n                        setValue(\"stock\",response.data().stock)\n                        setValue(\"description\",response.data().description)\n                    }\n                }catch(e){\n                    console.log(e);\n                }\n                \n            }\n            request()\n            \n        },[id,setValue]\n    )\n    return (\n        <div className=\"col-md-6 mx-auto\">\n            <div className=\"card card-body bg-light mt-5\">\n                <h3>Borrar Producto</h3>\n                <FormGroup label=\"SKU\" type=\"number\" register={{\n                        ...register(\"sku\", {\n                            disabled:true,\n                        })\n                    }}/>\n                <form onSubmit={handleSubmit(onSubmit)}>\n                    <FormGroup label=\"Titulo\" register={{\n                        ...register(\"title\", {\n                            disabled:true\n                        })\n                    }} />\n                    <FormGroup select={true} label=\"Categoria\" register={{\n                        ...register(\"category\", {\n                            disabled:true,\n                        })\n                    }} options={[{ value: \"computacion\", text: \"Computación\" },\n                    { value: \"gaming\", text: \"Gaming\" },\n                    ]} />\n                    <FormGroup label=\"Descripción\" register={{\n                        ...register(\"description\", {\n                            disabled:true\n                        })\n                    }} />\n                    <FormGroup label=\"Precio\" type=\"number\" register={{\n                        ...register(\"price\", {\n                            disabled:true\n                        })\n                    }} />\n                    <FormGroup label=\"Stock\" type=\"number\" register={{\n                        ...register(\"stock\", {\n                            disabled:true\n                        })\n                    }}/>\n                    <div className=\"row\">\n                    <div className=\"col\">\n                            <ButtonWithLoading loading={loading} type=\"submit\" variant=\"success\" size=\"lg\"> Borrar</ButtonWithLoading>\n                        </div>\n                        <div className=\"col\">\n                            <LinkContainer to=\"/admin/products\"><Button className=\"btn-block\" variant=\"danger\" size=\"lg\"> Cancelar</Button></LinkContainer>\n                        </div>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n\n}\nexport default DeleteProductPage","import IndexProductsPage from '../Pages/Product/Admin/IndexProductsPage';\nimport CreateProductPage from '../Pages/Product/Admin/CreateProductPage';\nimport EditProductPage from '../Pages/Product/Admin/EditProductPage';\nimport DeleteProductPage from '../Pages/Product/Admin/DeleteProductPage';\nimport PublicRoutes from './PublicRoutes';\n\nimport {\n  Switch,\n  Route\n} from \"react-router-dom\"\n\n/**\n * Rutas para la administracion de \n * los productos\n * \n * @returns rutas de administracion\n */\nconst AdminRoutes = () => {\n  return (\n    <Switch>\n      <Route path=\"/admin/products\" component={IndexProductsPage}/>\n      <Route path=\"/admin/product/create\" component={CreateProductPage}/>\n      <Route path=\"/admin/product/edit/:id\" component={EditProductPage}/>\n      <Route path=\"/admin/product/delete/:id\" component={DeleteProductPage}/>\n      <PublicRoutes/>\n    </Switch>\n  );\n}\nexport default AdminRoutes;\n","import React, { useState } from \"react\";\r\nimport AuthContext from \"./AuthContext\";\r\n\r\n/**\r\n * Proveedor de Contexto Auth\r\n * \r\n * @param {*} props \r\n * @returns \r\n */\r\nconst AuthProvider = (props) => {\r\n  //Hooks usuario logueado y datos de usuario\r\n  const [userIsLogin, setUserIsLogin] = useState(localStorage.getItem(\"userIsLogin\"));\r\n  const [userInfo, setUserInfo] = useState(JSON.parse(localStorage.getItem(\"userInfo\")));\r\n\r\n  /**\r\n   * Inicio de sesion de usuario\r\n   * setea los hooks userIsLogin a true \r\n   * y userInfo con la informacion del usuario\r\n   * \r\n   * @param {*} userInfo \r\n   */\r\n  const loginUser = (userInfo) => {\r\n    localStorage.setItem(\"userIsLogin\", true);\r\n    localStorage.setItem(\"userInfo\", JSON.stringify(userInfo));\r\n    setUserIsLogin(true);\r\n    setUserInfo(userInfo);\r\n  };\r\n  /**\r\n   * Cierre de sesion de usuario\r\n   * setea los hooks userIsLogin a false \r\n   * y userInfo clo deja vacio\r\n   * \r\n   */\r\n  const logoutUser = () => {\r\n    localStorage.removeItem(\"userIsLogin\");\r\n    localStorage.removeItem(\"userInfo\");\r\n    setUserIsLogin(false);\r\n    setUserInfo(false);\r\n  };\r\n\r\n\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        userIsLogin,\r\n        loginUser,\r\n        logoutUser,\r\n        userInfo,\r\n      }}\r\n    >\r\n      {/** Mostramos los componentes hijos*/ }\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n}\r\nexport default AuthProvider;\r\n","import React, { useState, useEffect } from 'react';\nimport CartContext from \"./CartContext\";\n\nconst CartProvider = (props) => {\n    /**\n     * Comprueba si existe un carrito en\n     * el localStorage si es asi lo parsea a JSON \n     * sino retorna un array vacio\n     * \n     * @returns cart (local)\n     */\n    const cartInLocal = () => {\n        return (localStorage.getItem('cart') !== null) ? JSON.parse(localStorage.getItem('cart')) : [];\n    };\n    /**\n     * Comprueba si existe pedidos de carritos en\n     * el localStorage si es asi lo parsea a JSON \n     * sino retorna un array vacio\n     * \n     * @returns cartOrders (local)\n     */\n    const cartOrdersInLocal = () => {\n        return (localStorage.getItem('cartOrders') !== null) ? JSON.parse(localStorage.getItem('cartOrders')) : [];\n    };\n    //Hooks con sus valores iniciales\n    const [cart, setCart] = useState(cartInLocal);\n    const [qtyProducts, setQtyProducts] = useState(0);\n    const [totalCartPay, setTotalCartPay] = useState(0);\n    const [orderIds, setOrderIds] = useState(cartOrdersInLocal);\n    \n    //componentDidMount\n    useEffect(() => {\n        updateQtyProducts();\n        localStorage.setItem('cart', JSON.stringify(cart));\n        localStorage.setItem('cartOrders', JSON.stringify(orderIds));\n        totalPay();\n    });\n    /**\n     * \n     * @param {*} addProduct\n     */\n    const addProductToCart = (addProduct) => {\n        //buscamos si el producto ya esta en el carrito\n        const findProduct = cart.find(product => product.id === addProduct.id);\n        /**\n         * Si el producto esta en el carrito buscamos el producto\n         * asi actualizamos la cantidad.\n         * Si no se encuentra en el carrito lo agregamos\n         */\n        if (findProduct !== undefined) {\n            //buscamos el index del producto a agregar\n            const indexFindProduct= cart.findIndex(product => product.id === addProduct.id);\n            /**\n             * sacamos el producto del carrito \n             * asi sumamos la cantidad recibida \n             * con la que ya tenia\n             * asi no se duplican en el local storage\n             */\n            cart.splice(indexFindProduct, 1,\n                {\n                    sku: addProduct.sku,\n                    title: addProduct.title,\n                    quantity: addProduct.quantity + findProduct.quantity, //sumamos la cantidad que tenia\n                    price: addProduct.price,\n                    image: addProduct.image,\n                    id: addProduct.id,\n                    category: addProduct.category\n                }\n            );\n\n        } else {\n            setCart([\n                //destructured\n                ...cart,\n                {\n                    sku: addProduct.sku,\n                    title: addProduct.title,\n                    quantity: addProduct.quantity,\n                    price: addProduct.price,\n                    image: addProduct.image,\n                    id: addProduct.id,\n                    category: addProduct.category\n                }\n            ]);\n        }\n    };\n\n    /**\n     * Comprueba si el producto esta en el carrito\n     * lo busca por sku\n     * @param {*} idProducto \n     * @returns true or false\n     */\n    const isInCart = (idProducto) => {\n        let findProduct = cart.find(product => product.id === idProducto);\n        return findProduct;\n    };\n    /**\n     * Actualiza la cantidad Productos \n     * que tenemos el carrito\n     */\n    const updateQtyProducts = () => {\n        //Aplicamos reduce para acumular las cantidad de cada producto en el carrito\n        let totalProducts = cart.reduce((acc, item) => acc + item.quantity, 0);\n        setQtyProducts(totalProducts);\n    };\n\n    /**\n     * Total a pagar \n     * Suma todos los precios de los productos en el carrito\n     */\n    const totalPay = () => {\n        //Aplicamos reduce para acumular el precio * la cantidad de cada producto en el carrito \n        const sumPay = cart.reduce((acc, prod) => acc + prod.price * prod.quantity, 0);\n        setTotalCartPay(sumPay);\n    };\n    /**\n     * Busca el producto por el SKU\n     * y lo filtra\n     * @param {*} idProducto\n     */\n    const deleteProduct = (idProducto) => {\n        //Retornamos todos los productos distinto al SKU que recibe\n        const editedProducts= cart.filter(product => product.id !== idProducto);\n        setCart(editedProducts);\n        //volvemos al setear el cart\n        localStorage.setItem('cart', JSON.stringify(editedProducts));\n    };\n\n    return (\n        <CartContext.Provider value={{\n            addProductToCart,\n            isInCart,\n            cart,\n            setCart,\n            qtyProducts,\n            updateQtyProducts,\n            totalCartPay,\n            deleteProduct,\n            orderIds,\n            setOrderIds,\n            cartInLocal,\n            cartOrdersInLocal\n        }}>\n            {/** Mostramos los componentes hijos*/}\n            {props.children}\n        </CartContext.Provider>\n    )\n}\nexport default CartProvider;\n\n\n\n","import Navbar from './Layout/Navbar/Navbar';\nimport Footer from './Layout/Footer/Footer';\nimport PublicRoutes from './Routes/PublicRoutes';\nimport AdminRoutes from './Routes/AdminRoutes';\nimport AuthProvider from './Context/Auth/AuthProvider';\nimport AuthContext from './Context/Auth/AuthContext';\nimport CartProvider from './Context/Cart/CartProvider';\nimport {\n  BrowserRouter as Router,\n  Switch,\n} from \"react-router-dom\"\n\n/**\n * \n * @returns \n */\nconst App = () => {\n  return (\n    <div className=\"container-fluid\">\n      <AuthProvider>\n        <CartProvider>\n          <Router>\n            <Navbar />\n            <Switch >\n              <AuthContext.Consumer>\n                {(context) => {\n                  //console.log(\"context user is login\", context.userIsLogin)\n                  //console.log(\"context user info\", context.userInfo)\n                  return (\n                    <>\n                      { //si el usuario esta logueado \n                        (context.userIsLogin && context.userInfo?.admin) && (\n                          <AdminRoutes />\n                        )}\n                      {(!context.userIsLogin) && (\n                        <PublicRoutes />\n                      )}\n                    </>\n                  )\n                }\n                }\n              </AuthContext.Consumer>\n            </Switch>\n          </Router>\n        </CartProvider>\n      </AuthProvider>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport 'bootstrap/dist/css/bootstrap.min.css'; // Archivo CSS de Bootstrap 4 \nimport 'bootstrap/dist/js/bootstrap.bundle.js'; // Archivo Javascript de Bootstrap 4 \n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}